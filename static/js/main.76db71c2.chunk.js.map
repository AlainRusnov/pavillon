{"version":3,"sources":["App.js","index.js"],"names":["Box","props","mesh","useRef","useState","hovered","setHover","active","setActive","useFrame","current","rotation","x","y","ref","scale","onClick","e","onPointerOver","onPointerOut","args","color","extend","OrbitControls","CameraControls","useThree","camera","domElement","gl","controls","update","autoRotate","enableZoom","SkyBox","scene","texture","CubeTextureLoader","load","background","App","intensity","position","angle","penumbra","ReactDOM","render","document","getElementById"],"mappings":"2PAKA,SAASA,EAAIC,GAEX,IAAMC,EAAOC,mBAFK,EAIUC,oBAAS,GAJnB,mBAIXC,EAJW,KAIFC,EAJE,OAKUF,oBAAS,GALnB,mBAKXG,EALW,KAKHC,EALG,KAUlB,OAHAC,aAAS,WACPP,EAAKQ,QAAQC,SAASC,EAAIV,EAAKQ,QAAQC,SAASE,GAAK,OAGrD,iDACMZ,GADN,IAEEa,IAAKZ,EACLa,MAAOR,EAAS,CAAC,IAAK,IAAK,KAAO,CAAC,EAAG,EAAG,GACzCS,QAAS,SAACC,GAAD,OAAOT,GAAWD,IAC3BW,cAAe,SAACD,GAAD,OAAOX,GAAS,IAC/Ba,aAAc,SAACF,GAAD,OAAOX,GAAS,IANhC,UAOE,mCAAmBc,KAAM,CAAC,EAAG,EAAG,KAChC,sCAAsBC,MAAOhB,EAAU,UAAY,cAKzDiB,YAAO,CAAEC,oBAET,IAAMC,EAAiB,WAAM,MAQvBC,cAFFC,EANyB,EAMzBA,OACMC,EAPmB,EAOzBC,GAAMD,WAIFE,EAAW1B,mBAEjB,OADAM,aAAS,kBAAMoB,EAASnB,QAAQoB,YAE9B,+BACEhB,IAAKe,EACLT,KAAM,CAACM,EAAQC,GACfI,YAAY,EACZC,YAAY,KAKlB,SAASC,IAAU,IACTC,EAAUT,cAAVS,MAGFC,GAFS,IAAIC,qBAEIC,KAAK,CAC1B,sBACA,sBACA,sBACA,sBACA,sBACA,wBAIF,OADAH,EAAMI,WAAaH,EACZ,KAGM,SAASI,IACtB,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,8BAAcC,UAAW,KACzB,2BAAWC,SAAU,CAAC,GAAI,GAAI,IAAKC,MAAO,IAAMC,SAAU,KAC1D,4BAAYF,SAAU,EAAE,IAAK,IAAK,MAClC,cAACzC,EAAD,CAAKyC,SAAU,EAAE,GAAI,GAAI,KACzB,cAACzC,EAAD,CAAKyC,SAAU,CAAC,EAAG,EAAG,MACtB,cAACzC,EAAD,CAAKyC,SAAU,CAAC,GAAI,GAAI,KACxB,cAACR,EAAD,OC5ENW,IAASC,OAAO,cAACN,EAAD,IAASO,SAASC,eAAe,W","file":"static/js/main.76db71c2.chunk.js","sourcesContent":["import React, { useRef, useState } from 'react';\nimport { Canvas, extend, useThree, useFrame } from 'react-three-fiber';\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { CubeTextureLoader } from \"three\";\n\nfunction Box(props) {\n  // This reference will give us direct access to the mesh\n  const mesh = useRef()\n  // Set up state for the hovered and active state\n  const [hovered, setHover] = useState(false)\n  const [active, setActive] = useState(false)\n  // Rotate mesh every frame, this is outside of React without overhead\n  useFrame(() => {\n    mesh.current.rotation.x = mesh.current.rotation.y += 0.01\n  })\n  return (\n    <mesh\n      {...props}\n      ref={mesh}\n      scale={active ? [1.5, 1.5, 1.5] : [1, 1, 1]}\n      onClick={(e) => setActive(!active)}\n      onPointerOver={(e) => setHover(true)}\n      onPointerOut={(e) => setHover(false)}>\n      <boxBufferGeometry args={[1, 1, 1]} />\n      <meshStandardMaterial color={hovered ? 'hotpink' : 'white'} />\n    </mesh>\n  )\n}\n\nextend({ OrbitControls });\n\nconst CameraControls = () => {\n  // Get a reference to the Three.js Camera, and the canvas html element.\n  // We need these to setup the OrbitControls class.\n  // https://threejs.org/docs/#examples/en/controls/OrbitControls\n\n  const {\n    camera,\n    gl: { domElement },\n  } = useThree();\n\n  // Ref to the controls, so that we can update them on every frame with useFrame\n  const controls = useRef();\n  useFrame(() => controls.current.update());\n  return (\n    <orbitControls\n      ref={controls}\n      args={[camera, domElement]}\n      autoRotate={false}\n      enableZoom={false}\n    />\n  );\n};\n\nfunction SkyBox() {\n  const { scene } = useThree();\n  const loader = new CubeTextureLoader();\n  // The CubeTextureLoader load method takes an array of urls representing all 6 sides of the cube.\n  const texture = loader.load([\n    './img/skybox/px.png',\n    './img/skybox/nx.png',\n    './img/skybox/py.png',\n    './img/skybox/ny.png',\n    './img/skybox/pz.png',\n    './img/skybox/nz.png',\n  ]);\n  // Set the scene background property to the resulting texture.\n  scene.background = texture;\n  return null;;\n}\n\nexport default function App() {\n  return (\n    <Canvas>\n      <CameraControls />\n      <ambientLight intensity={0.4} />\n      <spotLight position={[10, 10, 10]} angle={0.15} penumbra={0.8} />\n      <pointLight position={[-10, -10, -10]} />\n      <Box position={[-10, 0, -4]} />\n      <Box position={[5, 0, 10]} />\n      <Box position={[10, 5, -8]} />\n      <SkyBox />\n    </Canvas>\n  )\n}\n\n","import ReactDOM from 'react-dom'\nimport React from 'react'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}